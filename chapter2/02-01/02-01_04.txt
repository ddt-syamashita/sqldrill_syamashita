
作成者：山下
作成日：2021/2/9

chapter2

2-1
問4
貸し出し記録テーブル（rental）とユーザテーブル（usr）からそれぞれのユーザについて、
現在何冊を貸し出しているかを、貸し出し数の多い順に取得してみましょう。
取得列は、ユーザの氏名、貸し出し数とします。
また、貸し出し数0のユーザは出力する必要はありません。

//出力する列を選択する
SELECT
	//usrテーブルからl_name列を取得するため、記述
	u.l_name,
	//usrテーブルからf_name列を取得するため、記述
	u.f_name,
	//貸し出しidをもとに、貸し出し数を算出するためCOUNT関数を使用する
	COUNT(r.id)
//どのテーブルから取得するのか
FROM
	//rentalテーブルから取得する。ASを使用し、テーブル名をつける。
	rental AS r
//テーブルを結合させるため、INNER JOINを定義
INNER JOIN
	//usrテーブルを結合させ、テーブル名をASを使用してつける。
	usr AS u
//結合するキーを定義するため、ONを記述
ON
	//各テーブルのキーを結合させるため、定義する。
	r.user_id=u.user_id
//抽出条件を定義する
WHERE
	//貸し出し中の値のみを抽出させるため、テーブル名、列名、出力させる値を定義する
	r.returned = 0
//貸出数を集計するためにGROUP BYを定義
GROUP BY
	//貸し出し中のユーザを集計するため、氏名を定義
	u.l_name,
	u.f_name,
	//貸し出し記録テーブルの利用者コードを集計するため、定義
	r.user_id
//集計結果をもとに抽出条件を指定する
HAVING
	//貸出数が0より大きな値のみ抽出する
	COUNT(r.id) > 0
//指定した値を並べ替えるためORDER BYを定義
ORDER BY
	//貸出数を降順で出力させるため、DESCを使用する
	COUNT(r.id) DESC
;



実行結果
mysql> SELECT
    -> u.l_name,
    -> u.f_name,
    -> COUNT(r.id)
    -> FROM
    -> rental AS r
    -> INNER JOIN
    -> usr AS u
    -> ON
    -> r.user_id=u.user_id
    -> WHERE
    -> r.returned = 0
    -> GROUP BY
    -> u.l_name,
    -> u.f_name,
    -> r.user_id
    -> HAVING
    -> COUNT(r.id) > 0
    -> ORDER BY
    -> COUNT(r.id) DESC
    -> ;
+--------+--------+-------------+
| l_name | f_name | COUNT(r.id) |
+--------+--------+-------------+
| 西島   | 文子   |           2 |
| 河合   | 泰治   |           2 |
| 上原   | 幸一   |           1 |
| 和田   | 修子   |           1 |
| 森本   | 絵里   |           1 |
| 根岸   | 裕子   |           1 |
| 吉岡   | 遥     |           1 |
| 松本   | 博美   |           1 |
+--------+--------+-------------+
8 rows in set (0.00 sec)